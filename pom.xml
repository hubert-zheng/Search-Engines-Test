<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.hubert</groupId>
	<artifactId>LuceneTest</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>LuceneTest</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>


	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-core -->
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>6.4.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-queryparser -->
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queryparser</artifactId>
			<version>6.4.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-analyzers-common -->
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers-common</artifactId>
			<version>6.4.1</version>
		</dependency>



		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-solrj</artifactId>
			<version>5.5.2</version>
		</dependency>

		<!-- system scope引入的包，在使用jar-with-dependencies打包时将不会被包含，可以使用resources将本地包打进jar-with-dependencies -->
		<!-- 引入paoding分词本地jar到程序 <dependency> <groupId>net.paoding.analysis</groupId> 
			<artifactId>paoding</artifactId> <version>1.0</version> <scope>system</scope> 
			<systemPath>${project.basedir}/lib/paoding-analysis.jar</systemPath> </dependency> -->
		<!-- 引入ik分词本地jar到程序 <dependency> <groupId>org.analysis</groupId> <artifactId>ikAnalyzer</artifactId> 
			<version>1.0</version> <scope>system</scope> <systemPath>${project.basedir}/lib/IKAnalyzer2012_u6.jar</systemPath> 
			</dependency> -->

		<!-- word分词器 -->
		<dependency>
			<groupId>org.apdplat</groupId>
			<artifactId>word</artifactId>
			<version>1.3</version>
		</dependency>
		<!-- mmseg4j分词器 -->
		<dependency>
			<groupId>com.chenlb.mmseg4j</groupId>
			<artifactId>mmseg4j-solr</artifactId>
			<version>2.4.0</version>
		</dependency>


	</dependencies>

	<!-- 生成的xxx-jar-with-dependencies.jar中，将会包含lib目录以及my-jar.jar，并且能够被在执行的时候被找到。 
		有的时候这种方法会失效，比如JDBCDriver在声明的时候Class.forName("xxx.Driver")就会说找不到类 <build> 
		<plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-shade-plugin</artifactId> 
		<executions> <execution> <id>make-assembly</id> <phase>package</phase> <goals> 
		<goal>shade</goal> </goals> <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> 
		</descriptorRefs> <finalName>xxx-jar-with-dependencies</finalName> </configuration> 
		</execution> </executions> </plugin> </plugins> <resources> <resource> <targetPath>lib/</targetPath> 
		<directory>lib/</directory> <includes> <include>**/**.jar</include> </includes> 
		</resource> </resources> </build> -->

</project>
